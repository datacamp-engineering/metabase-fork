defaults: &defaults
  working_directory: /home/circleci/metabase/metabase/
  # This is just the circleci/clojure:lein-2.8.1-node-browsers image with make & yarn installed
  docker:
      - image: metabase/ci:java-8-lein-2.8.1-yarn-0.16.0

version: 2.1
jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - metabase/metabase

  be-deps:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - restore_cache:
          keys:
            - mb-deps-{{ checksum "yarn.lock" }}-{{ checksum "project.clj" }}
            - mb-deps
      - run: lein deps
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .m2

  be-tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run backend unit tests
          command: lein with-profile +ci test
          no_output_timeout: 5m

  be-linter-eastwood:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run Eastwood linter
          command: lein with-profile +ci eastwood
          no_output_timeout: 5m

  be-linter-docstring-checker:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run dockstring-checker
          command: lein with-profile +ci docstring-checker
          no_output_timeout: 5m

  be-linter-bikeshed:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run dockstring-checker
          command: lein with-profile +ci bikeshed
          no_output_timeout: 5m

  be-linter-reflection-warnings:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run dockstring-checker
          command: ./bin/reflection-linter
          no_output_timeout: 5m


  fe-deps:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - restore_cache:
          keys:
            - mb-deps-{{ checksum "yarn.lock" }}-{{ checksum "project.clj" }}
            - mb-deps
      - run:
          name: Run yarn
          command: SAUCE_CONNECT_DOWNLOAD_ON_INSTALL=true yarn
          no_output_timeout: 5m
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .yarn
            - .yarn-cache
            - metabase/metabase/node_modules

  fe-tests-karma:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run frontend tests (karma)
          command: yarn run test-karma
          no_output_timeout: 5m

  fe-tests-unit:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run frontend unit tests
          command: yarn run test-unit
          no_output_timeout: 5m

  build-uberjar:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Build uberjar
          command: ./bin/build-for-test
          no_output_timeout: 5m
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - metabase/metabase/resources/version.properties
            - metabase/metabase/target/uberjar/metabase.jar

  fe-tests-integrated:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run frontend integrated tests
          command: yarn run test-integrated-no-build
          no_output_timeout: 5m

  cache-dependencies:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/
      - save_cache:
          key: mb-deps-{{ checksum "yarn.lock" }}-{{ checksum "project.clj" }}
          paths:
            - /home/circleci/.m2
            - /home/circleci/.yarn
            - /home/circleci/.yarn-cache
            - /home/circleci/metabase/metabase/node_modules
            - /home/circleci/metabase/metabase/target/uberjar

  release:
    environment:
      SERVICE: metabase
    docker:
      - image: ${STAGING_ECR_URL}/docker-deploy
        aws_auth: &ecr_credentials
          aws_access_key_id: $STAGING_AWS_ACCESS_KEY_ID
          aws_secret_access_key: $STAGING_AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Move jar
          command: |
            cp /home/circleci/metabase/metabase/target/uberjar/metabase.jar bin/docker/
      - run:
          name: Build application docker image
          command: |
            docker build -t ${STAGING_ECR_URL}/${SERVICE}:${CIRCLE_SHA1} bin/docker/
      - run:
          name: Push image
          command: |
            ENVIRONMENT=staging DOCKER_IMAGE="${STAGING_ECR_URL}/${SERVICE}" TAG=${CIRCLE_SHA1} /docker-push.sh

workflows:
  version: 2
  build:
    jobs:
      - checkout
      - be-deps:
          requires:
            - checkout
      - be-tests:
          requires:
            - be-deps
      - be-linter-eastwood:
          requires:
            - be-deps
      - be-linter-docstring-checker:
          requires:
            - be-deps
      - be-linter-bikeshed:
          requires:
            - be-deps
      - be-linter-reflection-warnings:
          requires:
            - be-deps
      - fe-deps:
          requires:
            - checkout
      - fe-tests-karma:
          requires:
            - fe-deps
      - fe-tests-unit:
          requires:
            - fe-deps
      - build-uberjar:
          requires:
            - be-deps
      - fe-tests-integrated:
          requires:
            - build-uberjar
            - fe-deps
      - cache-dependencies:
          requires:
            - be-deps
            - fe-deps
            - build-uberjar
      - release:
          requires:
            - fe-tests-integrated
